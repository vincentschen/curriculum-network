// Generated by LiveScript 1.3.1
(function(){
  var yamlfile, asyncblock, bing_count, blacklist, main;
  yamlfile = require('yamlfile');
  asyncblock = require('asyncblock');
  bing_count = require('bing_count');
  blacklist = ['graph_metadata'];
  main = function(){
    var infile, outfile, network;
    infile = process.argv[2];
    outfile = process.argv[3];
    if (infile == null) {
      console.log('need infile');
      return;
    }
    if (outfile == null) {
      console.log('need outfile');
      return;
    }
    network = yamlfile.read(process.argv[2]);
    return asyncblock(function(flow){
      var i$, ref$;
      for (i$ in ref$ = network) {
        (fn$.call(this, i$, ref$[i$]));
      }
      return yamlfile.write(outfile, network);
      function fn$(topic_name, topic_info){
        var addbingcount;
        if (blacklist.indexOf(topic_name) !== -1) {
          return;
        }
        addbingcount = function(topic_name, topic_info, callback){
          var query, x;
          query = '"' + topic_name + '"';
          if (topic_info.tags != null) {
            query = (function(){
              var i$, ref$, len$, results$ = [];
              for (i$ = 0, len$ = (ref$ = topic_info.tags).length; i$ < len$; ++i$) {
                x = ref$[i$];
                results$.push('"' + x + '"');
              }
              return results$;
            }()).join(' ');
          }
          return bing_count(query, function(count){
            topic_info['num bing results'] = count;
            return callback();
          });
        };
        addbingcount(topic_name, topic_info, flow.add());
        console.log('calling addbingcount on ' + topic_name);
        flow.wait();
      }
    });
  };
  main();
}).call(this);
